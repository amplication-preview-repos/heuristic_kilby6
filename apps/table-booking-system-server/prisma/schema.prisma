datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Table {
  bookings        Booking[]
  createdAt       DateTime      @default(now())
  id              String        @id @default(cuid())
  reservations    Reservation[]
  restaurant      Restaurant?   @relation(fields: [restaurantId], references: [id])
  restaurantId    String?
  seatingCapacity Int?
  tableNumber     Int?
  timeSlots       TimeSlot[]
  updatedAt       DateTime      @updatedAt
}

model Restaurant {
  address     String?
  createdAt   DateTime @default(now())
  id          String   @id @default(cuid())
  name        String?
  phoneNumber String?
  tables      Table[]
  updatedAt   DateTime @updatedAt
}

model Booking {
  bookingTime DateTime?
  createdAt   DateTime           @default(now())
  customer    Customer?          @relation(fields: [customerId], references: [id])
  customerId  String?
  id          String             @id @default(cuid())
  status      EnumBookingStatus?
  table       Table?             @relation(fields: [tableId], references: [id])
  tableId     String?
  updatedAt   DateTime           @updatedAt
}

model Customer {
  bookings     Booking[]
  createdAt    DateTime      @default(now())
  email        String?
  id           String        @id @default(cuid())
  name         String?
  phoneNumber  String?
  reservations Reservation[]
  updatedAt    DateTime      @updatedAt
}

model TimeSlot {
  createdAt    DateTime      @default(now())
  endTime      DateTime?
  id           String        @id @default(cuid())
  reservations Reservation[]
  startTime    DateTime?
  table        Table?        @relation(fields: [tableId], references: [id])
  tableId      String?
  updatedAt    DateTime      @updatedAt
}

model Reservation {
  createdAt  DateTime  @default(now())
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  date       DateTime?
  id         String    @id @default(cuid())
  table      Table?    @relation(fields: [tableId], references: [id])
  tableId    String?
  timeSlot   TimeSlot? @relation(fields: [timeSlotId], references: [id])
  timeSlotId String?
  updatedAt  DateTime  @updatedAt
}

enum EnumBookingStatus {
  Option1
}
