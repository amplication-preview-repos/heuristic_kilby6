/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BookingUpdateManyWithoutTablesInput } from "./BookingUpdateManyWithoutTablesInput";
import { ValidateNested, IsOptional, IsInt, Min, Max } from "class-validator";
import { Type } from "class-transformer";
import { ReservationUpdateManyWithoutTablesInput } from "./ReservationUpdateManyWithoutTablesInput";
import { RestaurantWhereUniqueInput } from "../../restaurant/base/RestaurantWhereUniqueInput";
import { TimeSlotUpdateManyWithoutTablesInput } from "./TimeSlotUpdateManyWithoutTablesInput";

@InputType()
class TableUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BookingUpdateManyWithoutTablesInput,
  })
  @ValidateNested()
  @Type(() => BookingUpdateManyWithoutTablesInput)
  @IsOptional()
  @Field(() => BookingUpdateManyWithoutTablesInput, {
    nullable: true,
  })
  bookings?: BookingUpdateManyWithoutTablesInput;

  @ApiProperty({
    required: false,
    type: () => ReservationUpdateManyWithoutTablesInput,
  })
  @ValidateNested()
  @Type(() => ReservationUpdateManyWithoutTablesInput)
  @IsOptional()
  @Field(() => ReservationUpdateManyWithoutTablesInput, {
    nullable: true,
  })
  reservations?: ReservationUpdateManyWithoutTablesInput;

  @ApiProperty({
    required: false,
    type: () => RestaurantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RestaurantWhereUniqueInput)
  @IsOptional()
  @Field(() => RestaurantWhereUniqueInput, {
    nullable: true,
  })
  restaurant?: RestaurantWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  seatingCapacity?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  tableNumber?: number | null;

  @ApiProperty({
    required: false,
    type: () => TimeSlotUpdateManyWithoutTablesInput,
  })
  @ValidateNested()
  @Type(() => TimeSlotUpdateManyWithoutTablesInput)
  @IsOptional()
  @Field(() => TimeSlotUpdateManyWithoutTablesInput, {
    nullable: true,
  })
  timeSlots?: TimeSlotUpdateManyWithoutTablesInput;
}

export { TableUpdateInput as TableUpdateInput };
