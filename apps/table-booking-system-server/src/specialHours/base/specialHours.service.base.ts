/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SpecialHours as PrismaSpecialHours } from "@prisma/client";

export class SpecialHoursServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SpecialHoursCountArgs, "select">
  ): Promise<number> {
    return this.prisma.specialHours.count(args);
  }

  async specialHoursItems(
    args: Prisma.SpecialHoursFindManyArgs
  ): Promise<PrismaSpecialHours[]> {
    return this.prisma.specialHours.findMany(args);
  }
  async specialHours(
    args: Prisma.SpecialHoursFindUniqueArgs
  ): Promise<PrismaSpecialHours | null> {
    return this.prisma.specialHours.findUnique(args);
  }
  async createSpecialHours(
    args: Prisma.SpecialHoursCreateArgs
  ): Promise<PrismaSpecialHours> {
    return this.prisma.specialHours.create(args);
  }
  async updateSpecialHours(
    args: Prisma.SpecialHoursUpdateArgs
  ): Promise<PrismaSpecialHours> {
    return this.prisma.specialHours.update(args);
  }
  async deleteSpecialHours(
    args: Prisma.SpecialHoursDeleteArgs
  ): Promise<PrismaSpecialHours> {
    return this.prisma.specialHours.delete(args);
  }
}
