/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TableGroup as PrismaTableGroup } from "@prisma/client";

export class TableGroupServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TableGroupCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tableGroup.count(args);
  }

  async tableGroups(
    args: Prisma.TableGroupFindManyArgs
  ): Promise<PrismaTableGroup[]> {
    return this.prisma.tableGroup.findMany(args);
  }
  async tableGroup(
    args: Prisma.TableGroupFindUniqueArgs
  ): Promise<PrismaTableGroup | null> {
    return this.prisma.tableGroup.findUnique(args);
  }
  async createTableGroup(
    args: Prisma.TableGroupCreateArgs
  ): Promise<PrismaTableGroup> {
    return this.prisma.tableGroup.create(args);
  }
  async updateTableGroup(
    args: Prisma.TableGroupUpdateArgs
  ): Promise<PrismaTableGroup> {
    return this.prisma.tableGroup.update(args);
  }
  async deleteTableGroup(
    args: Prisma.TableGroupDeleteArgs
  ): Promise<PrismaTableGroup> {
    return this.prisma.tableGroup.delete(args);
  }
}
