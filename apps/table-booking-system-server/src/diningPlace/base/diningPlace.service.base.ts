/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DiningPlace as PrismaDiningPlace } from "@prisma/client";

export class DiningPlaceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DiningPlaceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.diningPlace.count(args);
  }

  async diningPlaces(
    args: Prisma.DiningPlaceFindManyArgs
  ): Promise<PrismaDiningPlace[]> {
    return this.prisma.diningPlace.findMany(args);
  }
  async diningPlace(
    args: Prisma.DiningPlaceFindUniqueArgs
  ): Promise<PrismaDiningPlace | null> {
    return this.prisma.diningPlace.findUnique(args);
  }
  async createDiningPlace(
    args: Prisma.DiningPlaceCreateArgs
  ): Promise<PrismaDiningPlace> {
    return this.prisma.diningPlace.create(args);
  }
  async updateDiningPlace(
    args: Prisma.DiningPlaceUpdateArgs
  ): Promise<PrismaDiningPlace> {
    return this.prisma.diningPlace.update(args);
  }
  async deleteDiningPlace(
    args: Prisma.DiningPlaceDeleteArgs
  ): Promise<PrismaDiningPlace> {
    return this.prisma.diningPlace.delete(args);
  }
}
