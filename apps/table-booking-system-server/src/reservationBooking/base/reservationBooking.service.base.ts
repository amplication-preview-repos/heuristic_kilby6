/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ReservationBooking as PrismaReservationBooking,
  Person as PrismaPerson,
  Restaurant as PrismaRestaurant,
} from "@prisma/client";

export class ReservationBookingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReservationBookingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.reservationBooking.count(args);
  }

  async reservationBookings(
    args: Prisma.ReservationBookingFindManyArgs
  ): Promise<PrismaReservationBooking[]> {
    return this.prisma.reservationBooking.findMany(args);
  }
  async reservationBooking(
    args: Prisma.ReservationBookingFindUniqueArgs
  ): Promise<PrismaReservationBooking | null> {
    return this.prisma.reservationBooking.findUnique(args);
  }
  async createReservationBooking(
    args: Prisma.ReservationBookingCreateArgs
  ): Promise<PrismaReservationBooking> {
    return this.prisma.reservationBooking.create(args);
  }
  async updateReservationBooking(
    args: Prisma.ReservationBookingUpdateArgs
  ): Promise<PrismaReservationBooking> {
    return this.prisma.reservationBooking.update(args);
  }
  async deleteReservationBooking(
    args: Prisma.ReservationBookingDeleteArgs
  ): Promise<PrismaReservationBooking> {
    return this.prisma.reservationBooking.delete(args);
  }

  async getPerson(parentId: string): Promise<PrismaPerson | null> {
    return this.prisma.reservationBooking
      .findUnique({
        where: { id: parentId },
      })
      .person();
  }

  async getRestaurant(parentId: string): Promise<PrismaRestaurant | null> {
    return this.prisma.reservationBooking
      .findUnique({
        where: { id: parentId },
      })
      .restaurant();
  }
}
