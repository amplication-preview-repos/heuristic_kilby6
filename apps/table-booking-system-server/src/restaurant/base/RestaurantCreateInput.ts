/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { ReservationBookingCreateNestedManyWithoutRestaurantsInput } from "./ReservationBookingCreateNestedManyWithoutRestaurantsInput";
import { Type } from "class-transformer";
import { SeatingCreateNestedManyWithoutRestaurantsInput } from "./SeatingCreateNestedManyWithoutRestaurantsInput";
import { TableCreateNestedManyWithoutRestaurantsInput } from "./TableCreateNestedManyWithoutRestaurantsInput";

@InputType()
class RestaurantCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReservationBookingCreateNestedManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => ReservationBookingCreateNestedManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => ReservationBookingCreateNestedManyWithoutRestaurantsInput, {
    nullable: true,
  })
  reservationBookings?: ReservationBookingCreateNestedManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: () => SeatingCreateNestedManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => SeatingCreateNestedManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => SeatingCreateNestedManyWithoutRestaurantsInput, {
    nullable: true,
  })
  seatings?: SeatingCreateNestedManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: () => TableCreateNestedManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => TableCreateNestedManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => TableCreateNestedManyWithoutRestaurantsInput, {
    nullable: true,
  })
  tables?: TableCreateNestedManyWithoutRestaurantsInput;
}

export { RestaurantCreateInput as RestaurantCreateInput };
